{"version":3,"sources":["/./$_lazy_route_resource lazy namespace object","/./src/app/app.component.html","/./src/app/summary/main/main.component.html","/./src/app/app-routing.module.ts","/./src/app/app.component.scss","/./src/app/app.component.ts","/./src/app/app.module.ts","/./src/app/const/url.ts","/./src/app/modal/cities.ts","/./src/app/summary/change-temperature.pipe.ts","/./src/app/summary/main/main.component.scss","/./src/app/summary/main/main.component.ts","/./src/app/summary/summary.module.ts","/./src/app/summary/summary.service.ts","/./src/environments/environment.ts","/./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n\\n<div class=\\\"container-fluid\\\">\\n        <router-outlet></router-outlet>\\n</div>\\n\\n\"","module.exports = \"<div class=\\\"weather\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-xs-12\\\">\\n        <form [formGroup]=\\\"searchCityForm\\\"  (ngSubmit) = \\\"getSelectedCityId\\\">\\n          <div class=\\\"d-flex justify-content-end\\\">\\n            <ng-select class=\\\"custom\\\" [items]=\\\"sortedCities\\\"\\n                   bindLabel=\\\"name\\\"\\n                   autofocus\\n                   [clearable] = \\\"false\\\"\\n                   bindValue=\\\"geonameid\\\"\\n                   formControlName = \\\"cities\\\"\\n                   placeholder = \\\"Enter City\\\"\\n                   (change)=\\\"onChange($event)\\\"\\n                   [virtualScroll]=\\\"true\\\"\\n                   [loading]=\\\"loading\\\"\\n                   (scroll)=\\\"onScroll($event)\\\"\\n                   (scrollToEnd)=\\\"onScrollToEnd()\\\">\\n                    <ng-template ng-option-tmp let-item=\\\"item\\\">\\n                        <span class=\\\"city\\\">{{item.name}}</span>\\n                        <span class=\\\"subcountry\\\">{{item.subcountry}}</span>\\n                        <span class=\\\"country\\\">{{item.country}}</span>\\n                    </ng-template>\\n            </ng-select>\\n          </div>\\n        </form>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-4\\\">\\n      <div class=\\\"card\\\">\\n          <div class=\\\"card-body\\\" *ngFor=\\\"let record of currentWeatherData; index as i\\\">\\n              <div class=\\\"temperature\\\">\\n                  <i class=\\\"fas fa-{{record.icon}}\\\"></i>\\n              </div>\\n              <div class=\\\"units-block\\\">\\n                  <h1 class=\\\"h1\\\">{{record.temp | changeTemperature : unitOfMeasure}}\\n                      <span class=\\\"units\\\">\\n                        <span class=\\\"badge\\\" (click) = \\\"convertToMat()\\\" [ngClass]=\\\"isActiveMetric ? 'active':'inactive' \\\">&#8451;</span><span class=\\\"vdivider\\\"></span><span class=\\\"badge\\\" (click) = \\\"convertToImp()\\\" [ngClass]=\\\"isActiveImp ? 'active':'inactive' \\\">&#8457;</span>\\n                      </span>\\n                    </h1>\\n              </div>\\n              <div class=\\\"d-flex justify-content-start summary\\\">\\n                    <div>\\n                        <span class=\\\"value\\\">{{record.humidity}}</span>\\n                        <span class=\\\"lable\\\">humidity</span>\\n                    </div>\\n                    <div>\\n                        <span class=\\\"value\\\">{{record.speed}}</span>\\n                        <span class=\\\"lable\\\">windspeed</span>\\n                    </div>\\n              </div>\\n              <div class=\\\"d-flex justify-content-end summary\\\">\\n                      <div *ngIf=\\\"unitOfMeasure === 'metric' || unitOfMeasure === 'imperial'\\\">\\n                          <span class=\\\"value\\\">{{record.temp_min | changeTemperature : unitOfMeasure}}</span>\\n                          <span class=\\\"badge\\\" *ngIf=\\\"unitOfMeasure === 'metric'\\\">&#8451;</span>\\n                          <span class=\\\"badge\\\" *ngIf=\\\"unitOfMeasure === 'imperial'\\\">&#8457;</span>\\n                          <span class=\\\"lable\\\">min temp</span>\\n                      </div>\\n                      <div *ngIf=\\\"unitOfMeasure === 'metric' || unitOfMeasure === 'imperial'\\\">\\n                          <span class=\\\"value\\\">{{record.temp_max | changeTemperature : unitOfMeasure}}</span>\\n                          <span class=\\\"badge\\\" *ngIf=\\\"unitOfMeasure === 'metric'\\\">&#8451;</span>\\n                          <span class=\\\"badge\\\" *ngIf=\\\"unitOfMeasure === 'imperial'\\\">&#8457;</span>\\n                          <span class=\\\"lable\\\">max temp</span>\\n                      </div>\\n              </div>\\n          </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-8\\\">\\n        <table class=\\\"table\\\">\\n            <thead>\\n            <tr>\\n              <th scope=\\\"col\\\">Time</th>\\n              <th scope=\\\"col\\\">Cloud</th>\\n              <th scope=\\\"col\\\">Temperature</th>\\n              <th scope=\\\"col\\\">Humidity</th>\\n              <th scope=\\\"col\\\">WindSpeed</th>\\n            </tr>\\n            </thead>\\n            <tbody>\\n            <tr *ngFor=\\\"let record of forecastData | paginate: { itemsPerPage: 10, currentPage: p }; let i = index\\\">\\n              <td>{{record.time}}</td>\\n              <td>{{record.clouds}}</td>\\n              <td>{{record.temp | changeTemperature : unitOfMeasure}}</td>\\n              <td>{{record.humidity}}</td>\\n              <td>{{record.wind}}</td>\\n            </tr>\\n            </tbody>\\n          </table>\\n          <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\n    </div>\\n  </div>\\n</div>\\n\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MainComponent } from './summary/main/main.component';\n\n\nconst routes: Routes = [\n  { path: '',  component: MainComponent }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forRoot(\n    routes,\n      \n    )],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'weather';\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport {NgxPaginationModule} from 'ngx-pagination';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { SummaryModule } from './summary/summary.module';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    NgSelectModule,\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    SummaryModule,\n    NgbModule,\n    NgxPaginationModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// urls\nconst api = \"http://api.openweathermap.org/\";\nconst apiKey = \"a96b9faed450f23f316a8aaecd26cf74\";\nconst units = \"metric\";\nexport class URL{\n    static readonly citiesURL = \"https://pkgstore.datahub.io/core/world-cities/world-cities_csv/data/6cc66692f0e82b18216a48443b6b95da/world-cities_csv.csv\";\n    static readonly getCurrentWeatherURL = api + \"data/2.5/\";\n    static readonly getHourlyForcastURL = api + \"data/2.5/\"\n    //static readonly citiesURL = \"\";\n}","export class City{\n    name : string;\n    country : string;\n    subcountry : string;\n    geonameid : string\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'changeTemperature'\n})\nexport class ChangeTemperaturePipe implements PipeTransform {\n\n  transform(value: number, unitOfMeasure: any) {\n    console.log(value,unitOfMeasure)\n    if (value && !isNaN(value)) {\n\n      if (unitOfMeasure == \"metric\") {\n        return value;\n      }\n      else if (unitOfMeasure == 'imperial') {\n        var tempareature = (value * 9 / 5) + 32\n        return tempareature.toFixed(2);\n      }\n    }\n    return;\n  }\n  \n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N1bW1hcnkvbWFpbi9tYWluLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, Directive, EventEmitter, Input, Output, QueryList, ViewChildren, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { SummaryService } from '../summary.service';\nimport { City } from '../../modal/cities';\nimport { CurrentWeather } from '../../modal/currentWeather';\nimport { Forecast } from '../../modal/forecast';\nimport { ChangeTemperaturePipe } from '../change-temperature.pipe'\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss']\n})\nexport class MainComponent implements OnInit {\n\n  records: any;\n  citiesList: any;\n  searchCityForm: FormGroup;\n  sortedCities = [];\n  selectedCityObj = [];\n  currentTemp: any;\n  currentTempData: object;\n  currentWindData: object;\n  currentweather: object;\n  apiKey = \"a96b9faed450f23f316a8aaecd26cf74\";\n  units = \"metric\";\n  cityId: string;\n  forecastData = [];\n  collectionSize: any;\n  pageSize: number;\n  currentWeatherData: any[];\n  unitOfMeasure: string = \"metric\";\n  isActiveMetric: boolean = true;\n  isActiveImp: boolean = false;\n\n  bufferSize = 50;\n  numberOfItemsFromEndBeforeFetchingMore = 10;\n  loading = false;\n  p: number = 1;\n\n\n\n  constructor(public summaryService: SummaryService, private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.sortedCities = JSON.parse(localStorage.getItem('arrayOfCities'));\n    this.initializeForm();\n    this.getAllCitiesFn();\n    this.loadInitialData();\n    this.getHourlyForcastFn();\n  }\n  onChange($event) {\n    this.cityId = this.searchCityForm.get('cities').value;\n    this.getSelectedCityId();\n    this.getHourlyForcastFn();\n  }\n\n  initializeForm() {\n    this.searchCityForm = this.formBuilder.group({\n      cities: [\"1248991\"]\n    })\n  }\n  loadInitialData() {\n    const cityId = 1248991;\n    const searchURL = \"weather?id=\" + cityId + \"&units=\" + this.units + \"&appid=\" + this.apiKey;\n    this.summaryService.getCurrentWeather(searchURL).subscribe((data: CurrentWeather) => {\n\n      this.currentWeatherData = []\n      let x = {\n        temp: data.main.temp,\n        humidity: data.main.humidity,\n        temp_min: data.main.temp_min,\n        temp_max: data.main.temp_max,\n        speed: data.wind.speed,\n        icon: data.weather[0].icon\n      }\n      this.currentWeatherData.push(x);\n    })\n  }\n  convertToMat() {\n    this.unitOfMeasure = \"metric\";\n    this.isActiveImp = false;\n    this.isActiveMetric = true;\n  }\n  convertToImp() {\n    this.unitOfMeasure = \"imperial\";\n    this.isActiveImp = true;\n    this.isActiveMetric = false;\n  }\n\n  getSelectedCityId() {\n\n    const searchURL = \"weather?id=\" + this.cityId + \"&units=\" + this.units + \"&appid=\" + this.apiKey;\n    console.log(searchURL);\n\n    this.summaryService.getCurrentWeather(searchURL).subscribe((data: CurrentWeather) => {\n      this.currentWeatherData = []\n      let x = {\n        cityId: data.id,\n        temp: data.main.temp,\n        humidity: data.main.humidity,\n        temp_min: data.main.temp_min,\n        temp_max: data.main.temp_max,\n        speed: data.wind.speed,\n        icon: data.weather[0].icon\n      }\n      this.currentWeatherData.push(x);\n\n      let currentTime = Date.now();\n      let getData = JSON.parse(localStorage.getItem('selectedCityObj')) || [];\n\n      for (let i = 0; i < getData.length; i++) {\n        let diffTimestamp = currentTime - getData[i].timestamp;\n        if (diffTimestamp >= 600000) {\n          //getData.removeItem(getData[i].geonameid);\n          console.log(getData[i].id);\n        }\n      }\n      // set timestamp to new object\n      this.currentWeatherData['timestamp'] = currentTime;\n      getData.push(this.currentWeatherData);\n      localStorage.setItem('selectedCityObj', JSON.stringify(getData));\n    })\n  }\n  getHourlyForcastFn() {\n    const searchURL = \"forecast?id=\" + \"1248991\" + \"&units=\" + this.units + \"&appid=\" + this.apiKey;\n    this.summaryService.getHourlyFocast(searchURL).subscribe((data: Forecast) => {\n      this.forecastData;\n      for (let i = 1; i < data.list.length; i++) {\n        let x = {\n          time: data.list[i].dt_txt,\n          clouds: data.list[i].clouds.all,\n          temp: data.list[i].main.temp,\n          humidity: data.list[i].main.humidity,\n          wind: data.list[i].wind.speed\n        }\n        this.forecastData.push(x)\n      }\n      localStorage.setItem('selectedCityForecast', JSON.stringify(this.forecastData));\n      this.collectionSize = this.forecastData.length;\n      return this.forecastData.sort((a, b) => {\n        return <any>new Date(b.time) - <any>new Date(a.time);\n      });\n    })\n  }\n\n  getAllCitiesFn() {\n    this.summaryService.getAllCities().subscribe(data => {\n      let csvRecordsArray = (<string>data).split(/\\r\\n|\\n/);\n      let headersRow = this.getHeaderArray(csvRecordsArray);\n      this.records = this.getDataRecordsArrayFromCSVFile(csvRecordsArray, headersRow.length);\n\n    })\n  }\n  getHeaderArray(csvRecordsArr: any) {\n    let headers = (<string>csvRecordsArr[0]).split(',');\n    let headerArray = [];\n    for (let j = 0; j < headers.length; j++) {\n      headerArray.push(headers[j]);\n    }\n    return headerArray;\n  }\n  getDataRecordsArrayFromCSVFile(csvRecordsArray: any, headerLength: any) {\n    this.citiesList = [];\n    for (let i = 1; i < csvRecordsArray.length; i++) {\n      let curruntRecord = (<string>csvRecordsArray[i]).split(',');\n      if (curruntRecord.length == headerLength) {\n        let csvRecord = new City();\n        csvRecord.name = curruntRecord[0].trim();\n        csvRecord.country = curruntRecord[1].trim();\n        csvRecord.subcountry = curruntRecord[2].trim();\n        csvRecord.geonameid = curruntRecord[3].trim()\n        let x = {\n          name: csvRecord.name,\n          country: csvRecord.country,\n          subcountry: csvRecord.subcountry,\n          geonameid: csvRecord.geonameid\n        }\n        this.citiesList.push(x);\n      }\n    }\n    this.citiesList.sort(function (a: any, b: any) {\n      if (a.name > b.name) return 1;\n      if (a.name < b.name) return -1;\n      return 0;\n    });\n    localStorage.setItem('arrayOfCities', JSON.stringify(this.citiesList));\n    //return this.citiesList;\n    console.log(this.citiesList);\n  }\n  onScrollToEnd() {\n    this.fetchMore();\n  }\n\n  onScroll({ end }) {\n    if (this.loading || this.sortedCities.length) {\n      return;\n    }\n\n    if (end + this.numberOfItemsFromEndBeforeFetchingMore >= this.sortedCities.length) {\n      this.fetchMore();\n    }\n  }\n\n  private fetchMore() {\n    const len = this.sortedCities.length;\n    const more = this.sortedCities.slice(len, this.bufferSize + len);\n    this.loading = true;\n    // using timeout here to simulate backend API delay\n    setTimeout(() => {\n      this.loading = false;\n      this.sortedCities = this.sortedCities.concat(more);\n    }, 200)\n  }\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { ChangeTemperaturePipe } from './change-temperature.pipe';\n\nimport { MainComponent } from './main/main.component';\n\n\n\n\n@NgModule({\n  declarations: [MainComponent, ChangeTemperaturePipe ],\n  imports: [\n    CommonModule,\n    NgSelectModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgbModule,\n    NgxPaginationModule\n  ]\n})\nexport class SummaryModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { tap, delay, catchError, map } from 'rxjs/operators';\n\nimport { URL } from '../const/url'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SummaryService {\n\n  constructor( private http: HttpClient) { }\n\n\n  getAllCities(){\n    return this.http.get(URL.citiesURL, { responseType:\"text\" } ).pipe(\n      map((res: any) => res)\n    );\n  }\n  getCurrentWeather(searchURL:any){\n    return this.http.get(URL.getCurrentWeatherURL+searchURL)\n  }\n\n  getHourlyFocast(searchURL:any){\n    return this.http.get(URL.getHourlyForcastURL+searchURL)\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}